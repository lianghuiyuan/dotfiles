Linux User

Install sshuttle
```
pip install sshuttle
```

Download And Install KT
```
$ curl -OL https://rdc-incubators.oss-cn-beijing.aliyuncs.com/stable/ktctl_linux_amd64.tar.gz
$ tar -xzvf ktctl_linux_amd64.tar.gz
$ mv ktctl_linux_amd64 /usr/local/bin/ktctl
$ ktctl -h
```

Connect: Access Kubernetes resource from local
```
$ sudo ktctl connect
2019/06/19 11:11:07 Deploying proxy deployment kt-connect-daemon in namespace default
2019/06/19 11:11:07 Pod status is Pending
2019/06/19 11:11:09 Pod status is Running
2019/06/19 11:11:09 Success deploy proxy deployment kt-connect-daemon in namespace default
2019/06/19 11:11:18 KT proxy start successful

Access PodIP:
| curl http://172.16.0.147:8080 

Access ClusterIP:
| $ curl http://172.19.143.139:8080

Access Server internal DNS address:
| $ curl http://tomcat:8080

```

Exchange: Access local from cluster
```
Create Tomcat 8 in local and expose 8080 port
| docker run -itd -p 8080:8080 tomcat:8

$ sudo ktctl exchange tomcat --expose 8080
2019/06/19 11:19:10  * tomcat (0 replicas)
2019/06/19 11:19:10 Scale deployment tomcat to zero
2019/06/19 11:19:10 Deploying proxy deployment tomcat-kt-oxpjf in namespace default
2019/06/19 11:19:10 Pod status is Pending
2019/06/19 11:19:12 Pod status is Running
2019/06/19 11:19:12 Success deploy proxy deployment tomcat-kt-oxpjf in namespace default
SSH Remote port-forward for POD starting
2019/06/19 11:19:14 ssh remote port-forward start at pid: 3567

tips:
if your remote port diffrent local port, you can user ${remotePort}:{localPort} set expose parameter

Access local tomcat by internal service DNS address:

```
